#publish your docker image to github container registry
name: publish
on: [push]
env:
  REGISTRY: ballerinatest.azurecr.io
  IMAGE_NAME: ballerina-test

jobs:
  publish-Ballerina-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: azure-resource-login
        uses: Azure/azure-resource-login-action@v1.0.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Setup Notation with azure-kv plugin
        uses: Duffney/setup-notation@v1.0.0
        with:
          version: 1.0.0-rc.7
          key_name: balkeyzure
          certificate_key_id: ${{ secrets.AZURE_KEY }}
          plugin_name: notation-azure-kv
          plugin_version:  0.5.0-rc.1
          
      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.AZURE_USER }}
          password: ${{ secrets.AZURE_PASSWORD }}
          login-server: ${{ env.REGISTRY }}

      - name: Build the Ballerina Docker image
        run: |

          docker build --no-cache=true . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ github.run_number }}
          docker run ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ github.run_number }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ github.run_number }}
      
#       - name: Generate key to sign published Docker image
#         run: notation cert generate-test --default "trusted" 
        
      - name: Verify key generation
        run: notation key list 
     
      - name: Sign the published Docker image
#         env: 
# #           creds: ${{ secrets.AZURE_CREDENTIALS }}
# #           password: ${{ secrets.GITHUB_TOKEN }}
        run: notation sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ github.run_number }}
        
#       - name: Create GitHub release
#         id: new-notation-test
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: v${{ github.run_number }}
#           release_name: Release ${{ github.run_number }}
          
#       - name: Upload Public Key to GitHub release
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.new-notation-test.outputs.upload_url }}
#           asset_path: ./trusted.pem
#           asset_name: trusted.pem
#           asset_content_type: application/octet-stream
          
