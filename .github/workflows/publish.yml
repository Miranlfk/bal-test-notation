#publish your docker image to github container registry
name: publish
on: [push]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: bal-test-notation

jobs:
  publish-Ballerina-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: azure-resource-login
        uses: Azure/azure-resource-login-action@v1.0.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Setup Notation with azure-kv plugin
        uses: Duffney/setup-notation@v1.0.0
        with:
          version: 1.0.0-rc.7
          key_name: balkeyzure
          certificate_key_id: https://balkey.vault.azure.net/keys/CertBal/d1580c9890d34888b23dcc03ed6d0dc0
          plugin_name: notation-azure-kv
          plugin_version:  0.5.0-rc.1
          
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the Ballerina Docker image
        run: |

          docker build --no-cache=true . --tag ${{ env.REGISTRY }}/miranlfk/${{ env.IMAGE_NAME }}:v${{ github.run_number }}
          docker run ${{ env.REGISTRY }}/miranlfk/${{ env.IMAGE_NAME }}:v${{ github.run_number }}
          docker push ${{ env.REGISTRY }}/miranlfk/${{ env.IMAGE_NAME }}:v${{ github.run_number }}
      
#       - name: Generate key to sign published Docker image
#         run: notation cert generate-test --default "trusted" 
        
      - name: Verify key generation
        run: notation key list 
     
      - name: Sign the published Docker image
        env: 
#           creds: ${{ secrets.AZURE_CREDENTIALS }}
#           password: ${{ secrets.GITHUB_TOKEN }}
        run: notation sign ${{ env.REGISTRY }}/miranlfk/${{ env.IMAGE_NAME }}:v${{ github.run_number }}
        
#       - name: Create GitHub release
#         id: new-notation-test
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: v${{ github.run_number }}
#           release_name: Release ${{ github.run_number }}
          
#       - name: Upload Public Key to GitHub release
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.new-notation-test.outputs.upload_url }}
#           asset_path: ./trusted.pem
#           asset_name: trusted.pem
#           asset_content_type: application/octet-stream
          
